#ifndef WEB_SERVER_PLUGIN_ENTRY_POINT_HPP
#define WEB_SERVER_PLUGIN_ENTRY_POINT_HPP

/**
 * @file PluginEntryPoint.hpp
 *
 * This module declares the PluginEntryPoint type.
 *
 * Â© 2018 by Richard Walters
 */

#include <functional>
#include <Http/IServer.hpp>
#include <Json/Json.hpp>
#include <SystemAbstractions/DiagnosticsSender.hpp>

/**
 * This is the type expected for the entry point functions
 * for all server plug-ins.
 *
 * @param[in,out] server
 *     This is the server to which to add the plug-in.
 *
 * @param[in] configuration
 *     This holds the configuration items of the plug-in.
 *
 * @param[in] diagnosticMessageDelegate
 *     This is the function to call to deliver diagnostic
 *     messages generated by the plug-in.
 *
 * @param[out] unloadDelegate
 *     This is where the plug-in should store a function object
 *     that the server should call to stop and clean up the plug-in
 *     just prior to unloading it.
 *
 *     If this is set to nullptr on return, it means the plug-in
 *     was unable to load successfully.
 */
typedef void (*PluginEntryPoint)(
    Http::IServer* server,
    Json::Json configuration,
    SystemAbstractions::DiagnosticsSender::DiagnosticMessageDelegate diagnosticMessageDelegate,
    std::function< void() >& unloadDelegate
);

#endif /* WEB_SERVER_PLUGIN_ENTRY_POINT_HPP */
